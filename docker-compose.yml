version: "3.9"

services:
  db:
    restart: always
    image: postgres:14.1-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - 5432:5432  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d employees"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
    - appnet
  
  minio:
    image: minio/minio
    restart: always
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data
    networks:
    - appnet
    command: server --console-address ":9001" /data

  api:
    build:
      context: .
      target: api
    env_file:
      - .env
    volumes:
      - api-data:/app/data
    command: >
      bash -c "export PYTHONPATH=/app/api &&
            python -m entrypoint &&
            uvicorn api.main:app --port 8000 --host 0.0.0.0 --reload --log-level trace"
    ports:
      - 8000:8000
    links:
      - db
      - minio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d employees"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
    - appnet

  backup:
    build:
      context: .
      target: backup
    depends_on:
      - db
      - minio
      - api
    env_file:
      - .env
    networks:
    - appnet


volumes:
  postgres-data:
    driver: local
  minio-data:
    driver: local
  api-data:
    driver: local

networks:
  appnet:
    name: appnet