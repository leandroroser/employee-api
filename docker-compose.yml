version: "3.9"

services:
  db:
    restart: always
    image: postgres:14.1-alpine
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=employees
      - POSTGRES_HOST=db
    ports:
      - 5432:5432  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d employees"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      target: api
    volumes:
      - "./data:/data"
    command: >
      bash -c "export PYTHONPATH=/app &&
             python -m entrypoint &&
             uvicorn main:app --port 8000 --host 0.0.0.0 --reload"
    ports:
      - 8000:8000
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d employees"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
      image: minio/minio
      restart: always
      environment:
        MINIO_ACCESS_KEY: minio
        MINIO_SECRET_KEY: minio
      ports:
        - 9000:9000
      volumes:
        - minio_data:/data

    backup:
    build:
      context: .
      target: backup
      depends_on:
        - postgres
        - minio
      volumes:
        - backup_scripts:/scripts
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: employees
        MINIO_ENDPOINT: http://minio:9000
        MINIO_ACCESS_KEY: minio
        MINIO_SECRET_KEY: minio
        BACKUP_BUCKET: backups
        BACKUP_SCHEDULE: "0 */6 * * *"

volumes:
  cache:
    driver: local
  db:
    driver: local