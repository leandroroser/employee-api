version: "3.9"

services:
  db:
    restart: always
    image: postgres:14.1-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=employees
      - POSTGRES_HOST=db
    ports:
      - 5432:5432  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d employees"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
    - appnet

  api:
    build:
      context: .
      target: api
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=employees
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - LOCAL_DATA_PATH=/app/data
    volumes:
      - api-data:/app/data
    command: >
      bash -c "export PYTHONPATH=/app/api &&
            python -m entrypoint &&
            uvicorn api.main:app --port 8000 --host 0.0.0.0 --reload --log-level trace"
    ports:
      - 8000:8000
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d employees"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
    - appnet

  minio:
    image: minio/minio
    restart: always
    depends_on:
      - api
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio1234
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data
    networks:
    - appnet
    command: server --console-address ":9001" /data

  backup:
    build:
      context: .
      target: backup
    depends_on:
      - db
      - minio
      - api
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: employees
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio1234
      BACKUP_BUCKET: backups
      BACKUP_SCHEDULE: "0/5 0 0 ? * * *"
    networks:
    - appnet


volumes:
  postgres-data:
    driver: local
  minio-data:
    driver: local
  api-data:
    driver: local

networks:
  appnet:
    name: appnet